from .interfaces import IPVSystem

class PVSystem(IPVSystem):
    """
    Represents a photovoltaic (PV) system that generates electricity based on solar irradiance.
    """
    def __init__(self, capacity_kw: float, initial_efficiency: float, degradation_rate_per_year: float):
        """
        Initializes a new instance of the PVSystem class.

        Args:
            capacity_kw (float): The capacity of the PV system in kilowatts.
            initial_efficiency (float): The initial efficiency of the PV system as a decimal.
            degradation_rate_per_year (float): The annual degradation rate of the system's efficiency as a decimal.
        """
        self.capacity_kw = capacity_kw
        self.initial_efficiency = initial_efficiency
        self.degradation_rate_per_year = degradation_rate_per_year

    def calculate_generation(self, irradiance_w_per_m2: float, hours: float) -> float:
        """
        Calculates the electricity generation based on solar irradiance and efficiency.

        Args:
            irradiance_w_per_m2 (float): The solar irradiance in watts per square meter.
            hours (float): The number of hours of sunlight.

        Returns:
            float: The electricity generated by the PV system in kilowatt-hours.
        """
        generation_kw = irradiance_w_per_m2 * self.capacity_kw * self.initial_efficiency * hours
        return generation_kw

    def assess_degradation(self, years: float) -> float:
        """
        Assesses the degradation of the PV system's efficiency over time.

        Args:
            years (float): The number of years the system has been in operation.

        Returns:
            float: The degraded efficiency as a decimal.
        """
        degraded_efficiency = self.initial_efficiency * (1 - self.degradation_rate_per_year) ** years
        return degraded_efficiency